       NAM LISP-LOOKUP
       OPT PAG
       PAG
OBEGAD EQU $03D0
CAR    EQU 0
CDR    EQU 2
EOI    EQU 4
*
       LIB LISPLB
* GLOBAL VECTORS
       ORG $0100
EVAL   RMB 3
READ   RMB 3
PRINT  RMB 3
TYPSWT RMB 3
GETCEL RMB 3
FRECEL RMB 3
PUSHX  RMB 3
POPX   RMB 3
TOPX   RMB 3
EVLATM RMB 3
SETATM RMB 3
       JMP LOOKUP
GNXTL  RMB 3
GFNXTL RMB 3
LSTINI RMB 3
LSTADD RMB 3
LSTAD2 RMB 3
LSTEND RMB 3
LSTEN0 EQU POPX
ERREX  RMB 3
ATMINI RMB 3
ISDTPR RMB 3
ISATOM RMB 3
GETC   RMB 3
NUMINV RMB 3
NUMFRM RMB 3
FRMNUM RMB 3
PUTSYM RMB 3
PUTC   RMB 3
ERRBRK RMB 3
       JMP GETSYM
STKFRG RMB 3
GCOL   RMB 3
PROPSH RMB 3
GETCAR RMB 3
ISVAR  RMB 3
PRINR  RMB 3
* STREQ EXPECTS 1ST ARG IN STR1, 2ND IN X-REG
       ORG OBEGAD
STREQ  STX STR2
       STX STP2
       LDX STR1
STE2   STX STP1
       LDAA 0,X
       LDX STP2
       CMPA 0,X
       BNE UNEQ
       INX
       TSTA
       BEQ ISEQ
       LDAA 0,X
       INX
       STX STP2
       LDX STP1
       INX
       CMPA 0,X
       BNE UNEQ
       INX
       TSTA
       BNE STE2
* NOTE: THE ABOVE LOOP IS "UNRAVELLED" FOR SPEED.
ISEQ   LDX STR2
       TSTA
* RETURN WITH COND. CODE SET
       RTS
*
UNEQ   LDAA #1
       BRA ISEQ
* LOOKUP EXPECTS PTR TO NAME IN X-REG.
* RETURNS PTR TO NEW ATOM CELL IN X-REG.
* LOOKS ON SYMLIST FOR EXISTING ATOM, ADDS CELL TO SYMLST
LOOKUP STX NAMPTR
       STX STR1
       LDAB 0,X                 * 1ST CHAR OF NAME SAVED IN B-REG
       TBA                      * COPY TO A FOR NUM TEST
       CMPA #'-                 * COULD THIS BE A NUMBER?
       BNE LKUNM2
       TST 1,X                  * "-" ALL ALONE?
       BEQ LKU1                 * YEP, TREAT LIKE A NON-NUMERIC ATOM
LKUNUM INX                      * POINT TO NEXT DIG
       LDAA 0,X                 * END OF SYM?
       BEQ LKUNM3               * YEP, WE HAVE A NUMBER!
LKUNM2 CMPA #'0
       BLT LKU1                 * (NOT A NUM)
       CMPA #'9
       BLE LKUNUM               * KEEP CHECKING
LKU1   LDX SYMLST               * POINT TO FIRST ATOM
       BEQ EOL                  * (UNLESS LIST EMPTY)
LKU2   STX LSTPTR
       LDX CAR,X
       STX FORM                 * SAVE ADDR
       DEX
       LDX CAR,X                * PICK UP NAME FROM ATOM CELL
       CMPB 0,X                 * QUICK CHECK FOR 1ST CHAR MATCH
       BNE LKU3
       JSR STREQ
       BEQ LKU4
* ADVANCE TO NEXT ATOM
LKU3   LDX LSTPTR
       LDX CDR,X
       BNE LKU2
* NOT FOUND, ALLOCATE TWO NEW CELLS
EOL    JSR GETCEL
       LDAA NAMPTR
       STAA CAR,X
       LDAA NAMPTR+1
       STAA CAR+1,X
       INX                      * SET UP 'FORM'
       STX FORM
       JSR GETCEL
       LDAA FORM
       STAA CAR,X
       LDAA FORM+1
       STAA CAR+1,X
       LDAA SYMLST
       STAA CDR,X
       LDAA SYMLST+1
       STAA CDR+1,X
       STX SYMLST               * PUT NEW ATOM ON FRONT OF SYMLIST
       BRA FOUND
*
FNDNUM STX FORM                 * SAVE RETURN FORM
LKU4   LDAA NAMPTR
       CMPA BEGPTR              * (UNLESS NAME IS BUILT-IN)
       BLO FOUND
       BHI LKU5
       LDAA NAMPTR+1
       CMPA BEGPTR+1
       BLO FOUND
LKU5   LDX NAMPTR
       STX SPCPTR
* RETURN POINTER TO CELL
FOUND  LDX FORM
       CPX NILATM               * NIL?
       BNE FND2
       LDX ZERO                 * YEP, RETURN WITH ZERO
FND1   STX FORM
FND2   RTS
* BUILD UP A NUMBER
* IS 16-BIT BCD NUMBER (+/-4999)
* HIGH BIT SET AS INDICATOR
LKUNM3 LDX NAMPTR
       CLRA                     * A AND B WILL BE NUMBER
       SUBB #'-                 * SAVE STATUS OF '-' FLAG
       STAB XTMP
       BEQ LKUNM5               * START WITH INX IF '-' FOUND
       CLRB
* SHIFT NUMBER LEFT 4
LKUNM4 CMPA #4                  * OVERFLOW?
       BHI NUMOVR               * YEP-->ERROR MESSAGE
       ASLB
       ROLA
       ASLB
       ROLA
       ASLB
       ROLA
       ASLB
       ROLA
       ADDB 0,X                 * ADD IN NEW DIGIT
       SUBB #'0
LKUNM5 INX
       TST 0,X
       BNE LKUNM4               * AND LOOP AROUND UNTIL DONE
*
LKUNM6 STAA XTMP2               * STORE THE RESULT
       STAB XTMP2+1
       LDX XTMP2
       LDAA XTMP                * NEGATIVE?
       BNE LKUNM7
* YEP, DO A BCD INVERT
       JSR NUMINV
LKUNM7 JSR NUMFRM               * CONVERT TO FORM
       BRA FNDNUM               * STORE IN FORM AND RETURN
*
NUMOVR LDX NAMPTR               * RESET SPCPTR (ASSUMING NO BUILTIN NUMBERS!!)
       STX SPCPTR
       LDX #NMOVMS              * 'NUMERIC OVERFLOW'
       JSR ERRBRK               * BREAK FOR NEW NUMBER
       BRA FND1                 * AND CLEANUP
* PTR TO LIST OF CHARS IN X-REG
* CHAR IN A-REG, RETURNS INDEX IN B-REG
* B < 0 IF NOT FOUND (CC'S SET ON EXIT)
IXLIST STX XTMP                 * SAVE X-REG FOR INDEX CALC
       BSR INLIST               * ON LIST?
       BCC IXL2
       LDAB #-1                 * NOPE
       BRA IXLRT
IXL2   STX XTMP2                * CALC INDEX
       LDAB XTMP2+1
       SUBB XTMP+1
IXLRT  LDX XTMP
       TSTB
       RTS
* PTR TO CHAR LIST IN X-REG, CHAR IN A-REG
* RETURNS WITH CARRY SET IF NOT FOUND, CLEAR OTHERWISE
* X-REG CLOBBERED (LEFT POINTING AT MATCH)
INLIST CMPA 0,X                 * MATCH CHAR IN LIST?
       BEQ INLRT
       INX                      * NOPE, TRY THE NEXT
       TST 0,X                  * END OF LIST?
       BNE INLIST
       SEC                      * YUP, SET CARRY
INLRT  RTS                      * RETURN WITH CARRY SET OR CLEAR
* READ NEXT SYMBOL, ADD TO SYMLIST, RETURN PTR IN X-REG
* SPCPTR,FREPTR,SYMLST,ENDPTR MUST BE INITIALIZED
* USES GETC SUBROUTINE TO GET CHARS
* PEEKC SHOULD BE ZERO INITIALLY
* TYPE OF LEXEME RETURNED IN B-REG...
* 0 = EOF
* 1 = QUOTED STRING
* 2 = BREAK CHAR (LIKE '.' OR '(')
* 3 = ALPHANUMERIC
* 4 = NON-ALPHANUMERIC ** REMOVED THIS CATEGORY 11/24/78
* <SP> AND ALL CTL CHARS (E.G. <HT> AND <FF>)
* ACT AS SEPARATORS, EXCEPT <EOI> IS BREAK
GETSYM CLRB
       LDAA RSTFLG              * BEING RESET?
       BNE RETEI2               * YEP, RETURN WITH EOIATM
       LDX SPCPTR               * GET START AD FOR CHARS OF SYM
       STX SYMPTR
       LDAA PEEKC               * DID WE PEEK?
       BNE GS2                  * YUP, SKIP THE GETC
GSNXTC JSR GETC
GS2    LDX #BRKLST              * IS IT A BREAK CHAR?
       BSR INLIST
       BCC GSBRK
       CMPA #$20                * NOPE, IS IT A <SP> OR CIL(??) CHAR?
       BHI GSNSEP
       TSTB                     * YEP, HAVE WE GOT A SYMBOL?
       BNE ENDSYM
       BRA GSNXTC               * NOPE, GO GET NEXT CHAR
GSBRK  TSTB                     * HAVE WE GOT A SYMBOL?
       BNE ENDSYM
       CMPA #EOI                * <EOI> TYPED?
       BEQ RETEOI               * YES, RETURN WITH B=0, NO PEEKC, FORM=EOIATM
       BSR COPYC                * NOPE, START WITH A NEW ONE
       CMPA #'"                 * QUOTED STRING?
       BEQ GSQSTR               * YES, GO COPY REST OF STRING
       LDAB #2                  * NOPE, SET BREAK-CHAR CODE
       ENDNPK CLRA              * END SYM WITH NO PEEKC
       ENDSYM STAA PEEKC        * SAVE PEEKC
       CLRA                     * FINISH UP SYMBOL
       BSR COPYC
       LDX SYMPTR               * LOOKUP ON SYMLIST
       JMP LOOKUP               * AND RETURN DIRECTLY FROM LOOKUP
*
RETEOI CLR PEEKC
RETEI2 LDX EOIATM               * RETURN WITH EOI ATOM
       STX FORM
       RTS
* NOT A SEPARATOR OR BREAK, CHECK IF OTHER SPECIAL
* NOT SPECIAL, ASSUME "ALPHANUMERIC"
GSNSEP TSTB                     * FIRST CHAR?
       BNE GSANCK
       LDAB #3                  * YES, SET ALPHA-NUMERIC CODE
GSANST BSR COPYC
       BRA GSNXTC               * LOOP FOR NEXT CHAR
GSANCK CMPB #3                  * NOW ALPHA-NUMERIC?
       BEQ GSANST               * YEP, STORE CHAR AND GET NEXT
       BRA ENDSYM               * NOPE, GO FINISH UP PREV SYM
* QUOTED STRING...
GSQSTR LDAB #1                  * QUOTED STRING TYPE SYMBOL
GSQ2   JSR GETC                 * GET NEXT CHAR
       BSR COPYC                * AND SAVE IT
       CMPA #EOI                * END OF INPUT?
       BEQ ENDSYM               * YEP, AND SAVE EOI IN PEEKC
       CMPA #'"                 * CLOSE QUOTE?
       BNE GSQ2
       JSR GETC                 * YEP, CHECK FOR DOUBLE ""
       CMPA #'"
       BNE ENDSYM
       BSR COPYC                * YEP, SAVE IT
       BRA GSQ2                 * AND KEEP GOING
* SAVE CHAR IN A-REG AT LOC PT'D BY SPCPTR
* CHECK AGAINST ENDPTR FOR SAFETY
COPYC  LDX SPCPTR
       CPX ENDPTR
       BPL CPCBAD
       STAA 0,X
       INX
       STX SPCPTR
       RTS
CPCBAD LDX #NOGCMG              * 'NO MORE FREE SPACE'
       JMP ERREX
*
PSTRNG EQU $AD1E
PCRLF  EQU $AD24
* TABLES, ETC.
BRKLST FCC '"()[]'
       FCB ''
       FCB EOI
       FCB 0
*
NMOVMS FCC 'NUMERIC OVERFLOW'
       FCB 4
NOGCMG FCC 'NO MORE FREE SPACE'
       FCB 4
BEGADR EQU *
       END
