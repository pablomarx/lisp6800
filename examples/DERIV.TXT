(DEF DERIV (LAMBDA (FUNC VAR FNAME)
	(COND
	((EQ FUNC VAR) 1)
	((ATOM FUNC )0)
	((EQ 'ADD (SETQ FNAME (CAR FUNC)))
	(LIST 'ADD (DERIV (CADR FUNC) VAR) (DERIV (CADDR FUNC) VAR)))
	((EQ 'MUL FNAME) (LIST 'ADD
	(LIST 'MUL (DERIV (CADR FUNC) VAR) (CADDR FUNC))
	(LIST 'MUL (CADR FUNC) (DERIV (CADDR FUNC) VAR))))
	((EQ 'POLY FNAME) (POLYDERIV (CADR FUNC) (CDDR FUNC) VAR))
	((EQ 'DIV FNAME) (LIST 'DIV
	(LIST 'SUB
	(LIST 'MUL (DERIV (CADR FUNC) VAR) (CADDR FUNC))
	(LIST 'MUL (CADR FUNC) (DERIV (CADDR FUNC) VAR)))
	(LIST 'MUL (CADDR FUNC) (CADDR FUNC))))
	((EQ 'SUB FNAME) (LIST 'SUB
	(DERIV (CADR FUNC) VAR)
	(DERIV (CADDR FUNC) VAR)))
	((EQ 'POW FNAME) (LIST 'ADD
	(LIST 'MUL (DERIV (CADR FUNC) VAR)
	(LIST 'MUL (CADDR FUNC)
		(LIST 'POW (CADR FUNC)
	(LIST 'SUB (CADDR FUNC) 1))))
	(LIST 'MUL (DERIV (CADDR FUNC) VAR)
	(LIST 'MUL (LIST 'LOG (CADR FUNC)) FUNC))))
	((NULL (EQ (CADR FUNC) VAR)) (LIST 'MUL
	(DERIV FUNC (CADR FUNC))
	(DERIV (CADR FUNC) VAR)))
	((EQ 'SIN FNAME) (LIST 'COS VAR))
	((EQ 'COS FNAME) (LIST 'SUB 0 (LIST 'SIN VAR)))
	((EQ 'LOG FNAME) (LIST 'DIV 1 VAR))
	((EQ 'EXP FNAME) FUNC)
	(T (BREAK UNKNOWN FUNCTION))]

(DEF CADDR (LAMBDA (X) (CAR (CDR (CDR X)))]

(DEF POLYDERIV (LAMBDA (ARG COEFS VAR PW)
	(COND ((ATOM COEFS) 0) (T
	(SETQ PW 0)
	(LIST 'ADD
	(CONS 'POLY (CONS ARG (MAPCAR DERIV1 COEFS)))
	(LIST 'MUL (DERIV ARG VAR)
	(CONS 'POLY (CONS ARG (CONCWHILE (COND
	
((ATOM (SETQ COEFS (CDR COEFS))) NOTHING)
	
(T(LIST 'MUL (SETQ PW (ADD PW 1)) (CAR COEFS))))]

(DEF DERIV1 (LAMBDA (FUNC) (DERIV FUNC VAR)]

